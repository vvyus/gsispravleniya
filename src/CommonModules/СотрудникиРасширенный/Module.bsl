
&После("ПриЗаполненииСпискаТекущихДел")
Процедура ГСИ_ПриЗаполненииСпискаТекущихДел(ТекущиеДела)
	ДобавитьТекущееДелоДниРожденияСотрудников(ТекущиеДела);
КонецПроцедуры                                     

Процедура ДобавитьТекущееДелоДниРожденияСотрудников(ТекущиеДела)
	
	Если Не ПравоДоступа("Чтение", Метаданные.Справочники.Сотрудники) Тогда
		Возврат; // Нет прав на чтение сотрудников - не может увидеть
	КонецЕсли;

	Если Не (ПравоДоступа("Добавление", Метаданные.Документы.ПриемНаРаботу) 
		Или ПравоДоступа("Добавление", Метаданные.Документы.ПриемНаРаботуСписком)) Тогда
		Возврат; //  Не может выполнить текущее дело - принять на работу не принятых.
	КонецЕсли;
	
	МодульТекущиеДелаСервер = ОбщегоНазначения.ОбщийМодуль("ТекущиеДелаСервер");
	Разделы = МодульТекущиеДелаСервер.РазделыДляОбъекта(Метаданные.Справочники.Сотрудники.ПолноеИмя());
	Если Разделы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	СотрудникиДр = СотрудникиДниРождений();
	СотрудникиДр.Сортировать("ГоловнаяОрганизация, Наименование");

	Обход = Обработки.ОбходКоллекции.НовыйОбход(СотрудникиДр);
	Пока Обход.СледующийПоЗначениюПоля("ГоловнаяОрганизация") Цикл
		Сотрудников = 0;
		Пока Обход.Следующий() Цикл
			Сотрудников = Сотрудников + 1;
		КонецЦикла;
		Для Каждого Раздел Из Разделы Цикл
			Если Раздел.Имя<>"Кадры" Тогда
				Продолжить;
			КонецЕсли;	
			Дело = ТекущиеДела.Добавить();
			ИдентификаторПрофиля = "СотрудникиДниРождений_"
				+ ЗарплатаКадрыРасширенныйКлиентСервер.УникальноеИмяРеквизита();
			Дело.Идентификатор = ИдентификаторПрофиля;	
			Дело.ЕстьДела       = Сотрудников > 0;
			Дело.Важное         = Истина;
			Дело.Владелец       = Раздел;
			Дело.Представление  = СтрШаблон(НСтр("ru = 'Дни рождения в %1'"), 
				Обход.ТекущиеДанные().ГоловнаяОрганизация);
			Дело.Количество		= Сотрудников;
			Дело.Подсказка      = СтрШаблон(
				НСтр("ru = '%1. Необходимо поздравить сотрудников!'"),
				СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
					НСтр("ru = ';%1 сотрудник день рождения;;%1 сотрудника день рождения;%1 сотрудников дни рождения;%1 сотрудника день рождения'"), 
					Сотрудников));
			Если Сотрудников > 0 Тогда
				Дело.ПараметрыФормы = Новый Структура("Организация", Обход.ТекущиеДанные().ГоловнаяОрганизация);
				Дело.Форма = Метаданные.Справочники.Сотрудники.Формы.ФормаСписка.ПолноеИмя();
			КонецЕсли;
			Для Каждого СтрСотр Из СотрудникиДр Цикл
				Дело = ТекущиеДела.Добавить();
				Дело.Идентификатор = "СотрудникДеньРождения_"+ ЗарплатаКадрыРасширенныйКлиентСервер.УникальноеИмяРеквизита();
				Дело.ЕстьДела      = Истина;
				Дело.Важное        = Истина; 
				Наименование= СокрП(СтрСотр.Наименование);
				//Дело.Представление = СтрШаблон("%1%2",ДополнитьСтрокуПробелами(Наименование,35),Формат(СтрСотр.ДатаРождения,"ДЛФ=Д"));
				Дело.Представление = ДополнитьСтрокуПробелами(Наименование,35)+Формат(СтрСотр.ДатаРождения,"ДЛФ=Д");
				Дело.Форма         = "Справочник.Сотрудники.ФормаОбъекта";
				Дело.ПараметрыФормы= Новый Структура("Ключ", СтрСотр.Сотрудник);
				Дело.Владелец      = ИдентификаторПрофиля;
				
			КонецЦикла;	
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры 

Функция ДополнитьСтрокуПробелами(ВхСтрока, Длина)  
	Пробел = " "; //Символ(0);
	Пока СтрДлина(ВхСтрока) < Длина Цикл		
		ВхСтрока = ВхСтрока + Пробел;
	КонецЦикла;
	Возврат ВхСтрока;
КонецФункции  
 
Функция СотрудникиДниРождений(ГоловнаяОрганизация = Неопределено)
	Запрос = новый Запрос;          
	
	ПараметрыПолучения = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолучения.Организация = ГоловнаяОрганизация;
	Период=ТекущаяДата();
	ПараметрыПолучения.НачалоПериода = НачалоМесяца(Период);
	ПараметрыПолучения.ОкончаниеПериода = КонецМесяца(Период);
	ПараметрыПолучения.ПодработкиРаботниковПоТрудовымДоговорам = Истина;
	ПараметрыПолучения.РаботникиПоДоговорамГПХ = Ложь;
	
	ПараметрыПолучения.КадровыеДанные = "Сотрудник,ФизическоеЛицо,ФИОПолные,ДатаРождения,ГоловнаяОрганизация";
    
    ТаблицаСотрудников = КадровыйУчет.СотрудникиОрганизации(Истина, ПараметрыПолучения);
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация); 
	Запрос.УстановитьПараметр("ДатаОтсчета", Период); 
	Запрос.УстановитьПараметр("ТаблицаСотрудников", ТаблицаСотрудников); 
	Запрос.УстановитьПараметр("РазностьДней", 3);                      
	Запрос.УстановитьПараметр("ТекГод", Год(Период)); 
	Запрос.УстановитьПараметр("Пробелы", " ");
	
	Запрос.Текст="ВЫБРАТЬ
	             |	ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
	             |	ТекущиеКадровыеДанныеСотрудников.Сотрудник КАК Сотрудник,
	             |	ТекущиеКадровыеДанныеСотрудников.ФИОПолные КАК Наименование,
	             |	ТекущиеКадровыеДанныеСотрудников.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	             |	ТекущиеКадровыеДанныеСотрудников.ДатаРождения КАК ДатаРождения
	             |ПОМЕСТИТЬ ВТСотрудники
	             |ИЗ
	             |	&ТаблицаСотрудников КАК ТекущиеКадровыеДанныеСотрудников
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ВТСотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
	             |	ВТСотрудники.Сотрудник КАК Сотрудник,
	             |	ВТСотрудники.Наименование КАК Наименование,
	             |	ВТСотрудники.ДатаРождения КАК ДатаРождения,
	             |	ВТСотрудники.ГоловнаяОрганизация КАК ГоловнаяОрганизация
	             |ИЗ
	             |	ВТСотрудники КАК ВТСотрудники
	             |ГДЕ
	             |	ВТСотрудники.ГоловнаяОрганизация = &ГоловнаяОрганизация
	             |	И РАЗНОСТЬДАТ(ДОБАВИТЬКДАТЕ(ВТСотрудники.ДатаРождения, ГОД, &ТекГод - ГОД(ВТСотрудники.ДатаРождения)), &ДатаОтсчета, ДЕНЬ) <= 0
	             |	И РАЗНОСТЬДАТ(ДОБАВИТЬКДАТЕ(ВТСотрудники.ДатаРождения, ГОД, &ТекГод - ГОД(ВТСотрудники.ДатаРождения)), &ДатаОтсчета, ДЕНЬ) >= -&РазностьДней";
	
	Если ГоловнаяОрганизация = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТСотрудники.ГоловнаяОрганизация = &ГоловнаяОрганизация", "ИСТИНА");
	КонецЕсли;	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции
